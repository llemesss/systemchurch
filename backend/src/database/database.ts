// backend/src/database.ts

import { Pool } from 'pg';
import dotenv from 'dotenv';

dotenv.config();

// Vari√°vel para guardar a conex√£o (singleton)
let dbInstance: Pool | null = null;

// A NOVA FUN√á√ÉO DE CONEX√ÉO (s√≥ roda uma vez)
export const connectDatabase = async () => {
    if (dbInstance) {
        return; // Se j√° conectado, n√£o faz nada
    }

    try {
        console.log('üêò Conectando √† base de dados PostgreSQL (Neon)...');
        dbInstance = new Pool({
            connectionString: process.env.DATABASE_URL,
        });
        
        // Testa a conex√£o para garantir que est√° tudo certo
        await dbInstance.query('SELECT NOW()');

        console.log('‚úÖ Conex√£o com a base de dados estabelecida com sucesso!');
    } catch (error) {
        console.error('‚ùå Erro fatal ao conectar com a base de dados:', error);
        // Em caso de erro na conex√£o, o processo do servidor deve parar.
        process.exit(1); 
    }
};

// A NOVA FUN√á√ÉO PARA OBTER A CONEX√ÉO (usada em todas as rotas)
export const getDatabase = () => {
    if (!dbInstance) {
        throw new Error('A base de dados n√£o foi inicializada. A conex√£o falhou no in√≠cio.');
    }
    return dbInstance;
};